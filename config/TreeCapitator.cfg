# Configuration file

general_settings {

    #--------------------------------------------------------------------------------------------------------#
    # global_settings
    #--------------------------------------------------------------------------------------------------------#
    # These are the general preference settings. They are used globally to tune how TreeCapitator works.
    #--------------------------------------------------------------------------------------------------------#

    global_settings {
        # [Global] Set to true if you want TreeCapitator to log info about what it's doing, false to disable.
        # If you are having an issue with the mod, set this option to true and post the resulting log to the
        # TreeCapitator Minecraftforum.net thread along with a detailed description of the issue. [default: false]
        B:allowDebugLogging=false

        # [Global] Set to true if you want TreeCapitator to tell you what kind of block you have clicked when 
        # sneaking, false to disable. [default: false]
        B:allowDebugOutput=false

        # [Global] Enable to cause item damage based on number of blocks destroyed [default: true]
        B:allowItemDamage=true

        # [Global] Enable to allow chopping down the entire tree even if your item does not have enough damage 
        # remaining to cover the number of blocks. [default: false]
        B:allowMoreBlocksThanDamage=false

        # [Global] When true, TreeCapitator will scan the Forge Ore Dictionary for blocks with an ore name matching
        # one of the strings in oreDictionaryLogStrings and generate a generic tree definition for them on the fly. 
        # When false oreDictionaryLogStrings and oreDictionaryLeafStrings will be ignored. [default: true]
        B:allowOreDictionaryLookup=true

        # [Global] Add block IDs to this list if you want to keep them from being registered as logs. This list will override
        # the local user configuration, inter-mod communication (IMC) configuration, and the Ore Dictionary scanning feature.
        # Use ',' to split block ID from metadata and ';' to split entries. [default: ]
        S:blockIDBlacklist=

        # [Global] When useIncreasingItemDamage=true the damage applied per block broken will increase by this 
        # amount every increaseDamageEveryXBlocks blocks broken in a tree. [range: 0.1 ~ 100.0, default: 1.0]
        S:damageIncreaseAmount=1.0

        # [Global] Axes and shears will take damage this many times for each log broken. Remaining damage is 
        # rounded and applied to tools when a tree is finished. [range: 0.1 ~ 50.0, default: 1.0]
        S:damageMultiplier=1.0

        # [Global] Enabling this will make leaves be destroyed when trees are chopped. [default: true]
        B:destroyLeaves=true

        # [Global] Flag to disable drops in Creative mode [default: false]
        B:disableCreativeDrops=false

        # [Global] Flag to disable tree chopping in Creative mode [default: false]
        B:disableInCreative=false

        # [Global] Toggle for whether or not to use the Treecapitating enchantment as opposed to requiring an item 
        # to be in the axeIDList to chop a tree. [default: false]
        B:enableEnchantmentMode=true

        # [Global] The internal ID for the Treecapitating enchantment. Change this if the default ID is conflicting 
        # with another mod. [range: 0 ~ 255, default: 187]
        I:enchantmentID=187

        # [Global] When useIncreasingItemDamage=true the damage applied per block broken will increase each time 
        # this many blocks are broken in a tree. [range: 1 ~ 500, default: 8]
        I:increaseDamageEveryXBlocks=8

        # [Global] Add item IDs to this list if you want to keep them from being registered as axes. This list will override
        # the local user configuration and inter-mod communication (IMC) configuration.
        # Use ',' to split item ID from metadata and ';' to split entries. [default: ]
        S:itemIDBlacklist=

        # [Global] Whether you need an item from the axeIDList to chop down a tree. Disabling will let you chop 
        # trees with any item. [default: true]
        B:needItem=true

        # [Global] The list of leaf type values to check for in the Forge Ore Dictionary. Entries are comma (,) separated. [default: treeLeaves,]
        S:oreDictionaryLeafStrings=treeLeaves,

        # [Global] The list of log type values to check for in the Forge Ore Dictionary. Entries are comma (,) separated. [default: logWood,]
        S:oreDictionaryLogStrings=logWood,

        # [Global] Whether or not to check the axe ID list for an item when determining if a given item can be 
        # imbued with the Treecapitating enchantment.
        # NOTE: when set to false, any ItemTool type item (pickaxes, shovels, etc) with a high enough 
        # enchantability level can get the enchantment, not just axes. [default: true]
        B:requireItemInAxeListForEnchant=true

        # [Global] Enabling this will cause destroyed leaves to be sheared when a shearing item is in the hotbar 
        # (ignored if destroyLeaves is false). [default: false]
        B:shearLeaves=false

        # [Global] Enabling this will shear /some/ of the vines on a tree when a shearing item is in the hotbar 
        # (ignored if destroyLeaves is false). [default: false]
        B:shearVines=false

        # [Global] Set sneakAction = "disable" to disable tree chopping while sneaking,
        # set sneakAction = "enable" to only enable tree chopping while sneaking,
        # set sneakAction = "none" to have tree chopping enabled regardless of sneaking. [default: disable]
        S:sneakAction=disable

        # [Global] When true, the log break speed is equal to original break speed / (tree height * 2)
        # When false, the original break speed is multiplied by the breakSpeedModifier value [default: true]
        B:treeHeightDecidesBreakSpeed=true

        # [Global] Set to true to have the per-block item damage amount increase after every 
        # increaseDamageEveryXBlocks blocks are broken. [default: false]
        B:useIncreasingItemDamage=false

        # [Global] Set to true if you want only the log/leaf blocks listed with each log in a tree
        # to break when that log type is chopped.  When set to false it will break
        # any log/leaf type blocks connected to the tree, not just the types for that tree. [default: true]
        B:useStrictBlockPairing=true
    }

    #--------------------------------------------------------------------------------------------------------#
    # per_tree_defaults
    #--------------------------------------------------------------------------------------------------------#
    # These are the default values of settings that can be defined on a per-tree basis. If a 
    # user-/mod-defined tree sets one of these values it will override the default value here.
    #--------------------------------------------------------------------------------------------------------#

    per_tree_defaults {
        # [Global] Set to false to disable TreeCapitator Smart Tree Detection.
        # Smart Tree Detection counts the number of leaf blocks that are adjacent to the
        # top-most connected log block at the x, z location of a log you've broken. If
        # there are at least minLeavesToID leaf blocks within maxLeafIDDist blocks then
        # TreeCapitator considers it a tree and allows chopping.
        # WARNING: Disabling Smart Tree Detection will remove the only safeguard against
        # accidentally destroying a log structure.  Make sure you know what you're doing! [default: true]
        B:allowSmartTreeDetection=true

        # [Global, PerTree] When using an item that can chop trees, the break speed will by multiplied by this value
        # THIS OPTION IS IGNORED WHEN treeHeightDecidesBreakSpeed=true [range: 0.01 ~ 1.0, default: 0.256]
        S:breakSpeedModifier=0.256

        # [Global, PerTree] The maximum horizontal distance that the leaf breaking effect will travel from the tree (use -1 for no limit). [range: -1 ~ 100, default: 4]
        I:maxHorLeafBreakDist=4

        # [Global, PerTree] The maximum horizontal distance that the log breaking effect will travel (use -1 for no limit). [range: -1 ~ 100, default: 16]
        I:maxHorLogBreakDist=16

        # [Global, PerTree] If a tree's top log is not close enough to leaf blocks, the tree will not be chopped.
        # Increasing this value will search further.  I would try to keep it at or below 3. [range: 1 ~ 8, default: 1]
        I:maxLeafIDDist=1

        # [Global, PerTree] The maximum vertical distance that the log breaking effect will travel (use -1 for no limit). [range: -1 ~ 255, default: -1]
        I:maxVerLogBreakDist=-1

        # [Global, PerTree] The minimum number of leaves within maxLeafIDDist of the top log block required to identify a tree. [range: 0 ~ 8, default: 3]
        I:minLeavesToID=3

        # [Global, PerTree] Setting this to false will allow the chopping to move downward as well as upward (and 
        # blocks below the one you break will be chopped) [default: true]
        B:onlyDestroyUpwards=true

        # [Global, PerTree] When true TreeCapitator will only instantly decay leaves that have actually been marked 
        # for decay. Set to false if you want leaves to be destroyed regardless of their decay status 
        # (hint: or for "leaf" blocks that are not really leaves). [default: true]
        B:requireLeafDecayCheck=true

        # [Global, PerTree] Set to false to use the older "top log" algorithm for finding the top log of a tree.
        # The old algorithm searches only the vertical column of blocks above the log you are chopping,
        # the newer algorithm is able to branch out to find the true top log of a tree. [default: true]
        B:useAdvancedTopLogLogic=true
    }

}


#--------------------------------------------------------------------------------------------------------#
# tree_and_mod_configs
#--------------------------------------------------------------------------------------------------------#
# This category is where all your settings live that are related to 3rd party mods. There are two methods 
# to set up a 3rd party mod's trees and items: 
# 
# (1) Config Method: uses the mod's config file to lookup block ID and item ID values. 3rd party config 
# settings tell TreeCapitator how to find a mod's config, what config values we need (log/leaf blocks, 
# axes, etc), how to use those values to define the mod's trees (if applicable), and what kind of tools the 
# items are (if applicable).
# 
# (2) Integer IDs Method: alternatively you can always just use the integer block and item IDs to define what 
# a tree or axe is.
# 
# Keep in mind that you can also include certain settings on a per-tree basis to override the global values.
# 
# Format:
#     <section_name> { (typically same as modID)
#         S:modID=<modID> (this can be found on the Mods screen in game or in mcmod.info)
#         S:configPath=<path to config file relative to .minecraft/config/> (most of the time this is the same as <modID>.cfg)
#         S:blockConfigKeys=<block config category>:<property name>; block:customLogBlockID; block:customLeafBlockID (config category is usually "block")
#         S:itemConfigKeys=<item config category>:<property name>; item:superAwesomeAxeShearsID (config category is usually "item")
#         S:axeIDList=<<item config category>:<property name>>; <item:superAwesomeAxeShearsID>
#         S:shearsIDList=<item:superAwesomeAxeShearsID>
#         B:useShiftedItemID=<(optional, defaults to true) whether or not to use the +256 shifted item ID> (true/false, almost always true)
#         B:overrideIMC=<optional, defaults to false) whether or not a mod's user config (this file) should override a mod's IMC config (IMC allows mods to send messages to each other for compatibility)
# 
#         <tree_name> { (the tree name is just for organization and clarity)
#             # logConfigKeys/leafConfigKeys: list of config key tags or raw integer block ID values. "," separates ID and metadata, ";" separates block entries
#             S:logConfigKeys=<<block config category>:<property name>>; <block:customLogBlockID>,0; 17,0
#             S:leafConfigKeys=<<block config category>:<property name>>; <block:customLeafBlockID>,0; 18
#             (per-tree settings)
# 
#         }
#     }
# 
# Examples:
#     ic2_using_config_method {
#         S:modID=IC2
#         S:configPath=IC2.cfg
#         S:blockConfigKeys=block:blockRubWood; block:blockRubLeaves
#         S:itemConfigKeys=item:itemToolBronzeAxe; item:itemToolChainsaw
#         S:axeIDList=<item:itemToolBronzeAxe>; <item:itemToolChainsaw>
#         S:shearsIDList=<item:itemToolChainsaw>
#         B:useShiftedItemID=true
# 
#         rubber {
#             S:logConfigKeys=<block:blockRubWood>
#             S:leafConfigKeys=<block:blockRubLeaves>
#         }
#     }
# 
#     ic2_using_integer_method {
#         S:modID=IC2
#         S:configPath=IC2.cfg
#         S:blockConfigKeys=
#         S:itemConfigKeys=
#         S:axeIDList=30199; 30233
#         S:shearsIDList=30233
# 
#         rubber {
#             S:logConfigKeys=243
#             S:leafConfigKeys=242
#         }
#     }
#--------------------------------------------------------------------------------------------------------#

tree_and_mod_configs {
    # The mod ID value for ID Resolver. [default: IDResolver]
    S:idResolverModID=IDResolver

    # The mod ID value for Multi-Mine. [default: AS_MultiMine]
    S:multiMineID=AS_MultiMine

    # This setting controls the default behavior when a mod is both configured manually (in the config file) and 
    # by the mod itself via IMC (inter-mod communication). [default: false]
    B:userConfigOverridesIMC=false

    #--------------------------------------------------------------------------------------------------------#
    # 1_vanilla_trees_and_items
    #--------------------------------------------------------------------------------------------------------#
    # This special category is the home of the vanilla tree block and item configurations. You can change the 
    # values in this category to suit your preferences.
    # 
    # WARNING: This config category must not be removed! If this category is renamed or removed TreeCapitator 
    # will assume your config file is new and reload the default user mod config settings!
    #--------------------------------------------------------------------------------------------------------#

    1_vanilla_trees_and_items {
        S:axeIDList=271; 275; 258; 286; 279
        S:modID=TreeCapitator
        B:overrideIMC=false
        S:shearsIDList=359

        vanilla_birch {
            S:leafConfigKeys=18, 2; 18, 10
            S:logConfigKeys=17, 2; 17, 6; 17, 10; 17, 14
        }

        vanilla_huge_brown_mushroom {
            S:leafConfigKeys=99, 1; 99, 2; 99, 3; 99, 4; 99, 5; 99, 6; 99, 7; 99, 8; 99, 9; 99, 14
            S:logConfigKeys=99, 10; 99, 15
            I:maxHorLeafBreakDist=6
            B:requireLeafDecayCheck=false
        }

        vanilla_huge_red_mushroom {
            S:leafConfigKeys=100, 1; 100, 2; 100, 3; 100, 4; 100, 5; 100, 6; 100, 7; 100, 8; 100, 9; 100, 14
            S:logConfigKeys=100, 10; 100, 15
            I:maxHorLeafBreakDist=6
            B:requireLeafDecayCheck=false
        }

        vanilla_jungle {
            S:leafConfigKeys=18, 3; 18, 11; 18, 0; 18, 8
            S:logConfigKeys=17, 3; 17, 7; 17, 11; 17, 15
            I:maxHorLeafBreakDist=6
            B:requireLeafDecayCheck=false
        }

        vanilla_oak {
            S:leafConfigKeys=18, 0; 18, 8
            S:logConfigKeys=17, 0; 17, 4; 17, 8; 17, 12
        }

        vanilla_spruce {
            S:leafConfigKeys=18, 1; 18, 9
            S:logConfigKeys=17, 1; 17, 5; 17, 9; 17, 13
        }

    }

    appliedenergistics {
        S:axeIDList=<item:appeng.toolQuartzAxe>
        S:configPath=AppliedEnergistics.cfg
        S:itemConfigKeys=item:appeng.toolQuartzAxe
        S:modID=AppliedEnergistics
        B:overrideIMC=false
        B:useShiftedItemID=true
    }

    biomesoplenty {
        S:axeIDList=<item:Muddy Axe ID>; <item:Amethyst Axe ID>
        S:blockConfigKeys=block:Bamboo ID; block:Colourized Leaves ID; block:Fruit Leaf Block ID; block:Leaf Block ID 1; block:Leaf Block ID 2; block:Log Block ID 1; block:Log Block ID 2; block:Log Block ID 3; block:Log Block ID 4; block:Petal ID
        S:configPath=BiomesOPlenty.cfg
        S:itemConfigKeys=item:Muddy Axe ID; item:Amethyst Axe ID
        S:modID=BiomesOPlenty
        B:overrideIMC=false
        B:useShiftedItemID=true

        acacia {
            S:leafConfigKeys=<block:Colourized Leaves ID>,0; <block:Colourized Leaves ID>,8
            S:logConfigKeys=<block:Log Block ID 1>,0; <block:Log Block ID 1>,4; <block:Log Block ID 1>,8
            B:requireLeafDecayCheck=false
        }

        big_flower {
            S:leafConfigKeys=<block:Petal ID>
            S:logConfigKeys=<block:Log Block ID 3>,3; <block:Log Block ID 3>,7; <block:Log Block ID 3>,11
        }

        cherry {
            S:leafConfigKeys=<block:Leaf Block ID 2>,1; <block:Leaf Block ID 2>,3; <block:Leaf Block ID 2>,9; <block:Leaf Block ID 2>,11
            S:logConfigKeys=<block:Log Block ID 1>,1; <block:Log Block ID 1>,5; <block:Log Block ID 1>,9
            B:requireLeafDecayCheck=false
        }

        darkwood {
            S:leafConfigKeys=<block:Leaf Block ID 1>,3; <block:Leaf Block ID 1>,11
            S:logConfigKeys=<block:Log Block ID 1>,2; <block:Log Block ID 1>,6; <block:Log Block ID 1>,10
            B:requireLeafDecayCheck=false
        }

        dead {
            S:leafConfigKeys=
            S:logConfigKeys=<block:Log Block ID 3>,2; <block:Log Block ID 3>,6; <block:Log Block ID 3>,10
        }

        fir {
            S:leafConfigKeys=<block:Leaf Block ID 1>,5; <block:Leaf Block ID 1>,13
            S:logConfigKeys=<block:Log Block ID 1>,3; <block:Log Block ID 1>,7; <block:Log Block ID 1>,11
            B:requireLeafDecayCheck=false
        }

        hellbark {
            S:leafConfigKeys=<block:Leaf Block ID 2>,4; <block:Leaf Block ID 2>,12
            S:logConfigKeys=<block:Log Block ID 4>,1; <block:Log Block ID 4>,5; <block:Log Block ID 4>,9
            B:requireLeafDecayCheck=false
        }

        holy {
            S:leafConfigKeys=<block:Leaf Block ID 1>,6; <block:Leaf Block ID 1>,14
            S:logConfigKeys=<block:Log Block ID 2>,0; <block:Log Block ID 2>,4; <block:Log Block ID 2>,8
            B:requireLeafDecayCheck=false
        }

        jacaranda {
            S:leafConfigKeys=<block:Leaf Block ID 2>,5; <block:Leaf Block ID 2>,13
            S:logConfigKeys=<block:Log Block ID 4>,2; <block:Log Block ID 4>,6; <block:Log Block ID 4>,10
            B:requireLeafDecayCheck=false
        }

        magic {
            S:leafConfigKeys=<block:Leaf Block ID 1>,2; <block:Leaf Block ID 1>,10
            S:logConfigKeys=<block:Log Block ID 2>,1; <block:Log Block ID 2>,5; <block:Log Block ID 2>,9
            B:requireLeafDecayCheck=false
        }

        mangrove {
            S:leafConfigKeys=<block:Colourized Leaves ID>,1; <block:Colourized Leaves ID>,9
            S:logConfigKeys=<block:Log Block ID 2>,2; <block:Log Block ID 2>,6; <block:Log Block ID 2>,10
            B:requireLeafDecayCheck=false
        }

        palm {
            S:leafConfigKeys=<block:Colourized Leaves ID>,2; <block:Colourized Leaves ID>,10
            S:logConfigKeys=<block:Log Block ID 2>,3; <block:Log Block ID 2>,7; <block:Log Block ID 2>,11
            B:requireLeafDecayCheck=false
        }

        pine {
            S:leafConfigKeys=<block:Colourized Leaves ID>,5; <block:Colourized Leaves ID>,13
            S:logConfigKeys=<block:Log Block ID 4>,0; <block:Log Block ID 4>,4; <block:Log Block ID 4>,8
            B:requireLeafDecayCheck=false
        }

        redwood {
            S:leafConfigKeys=<block:Colourized Leaves ID>,3; <block:Colourized Leaves ID>,11
            S:logConfigKeys=<block:Log Block ID 3>,0; <block:Log Block ID 3>,4; <block:Log Block ID 3>,8
            B:requireLeafDecayCheck=false
        }

        vanilla_birch {
            S:leafConfigKeys=<block:Leaf Block ID 1>,0; <block:Leaf Block ID 1>,8
            S:logConfigKeys=
        }

        vanilla_jungle {
            S:leafConfigKeys=
            S:logConfigKeys=
            I:maxLeafIDDist=3
        }

        vanilla_oak {
            S:leafConfigKeys=<block:Leaf Block ID 1>,4; <block:Leaf Block ID 1>,7; <block:Leaf Block ID 1>,12; <block:Leaf Block ID 1>,15; <block:Fruit Leaf Block ID>; <block:Leaf Block ID 2>,0; <block:Leaf Block ID 2>,8; <block:Leaf Block ID 2>,2; <block:Leaf Block ID 2>,10; 18,2; 18,10
            S:logConfigKeys=
        }

        willow {
            S:leafConfigKeys=<block:Colourized Leaves ID>,4; <block:Colourized Leaves ID>,12
            S:logConfigKeys=<block:Log Block ID 3>,1; <block:Log Block ID 3>,5; <block:Log Block ID 3>,9
            B:requireLeafDecayCheck=false
        }

    }

    divinerpg {
        S:axeIDList=<item:Bedrock Axe>; <item:Crystal Axe>; <item:Realmite Axe>; <item:azuriteaxe>; <item:corruptedaxe>; <item:denseaxe>; <item:divineaxe>; <item:donatoraxe>; <item:energyaxe>; <item:mythrilaxe>; <item:plasmaaxe>; <item:serenityaxe>; <item:twilightaxe>
        S:blockConfigKeys=block:eucalyptus
        S:configPath=DivineRPG.cfg
        S:itemConfigKeys=item:Bedrock Axe; item:Crystal Axe; item:Realmite Axe; item:azuriteaxe; item:corruptedaxe; item:denseaxe; item:divineaxe; item:donatoraxe; item:energyaxe; item:mythrilaxe; item:plasmaaxe; item:serenityaxe; item:twilightaxe
        S:modID=DivineRPG
        B:overrideIMC=false
        B:useShiftedItemID=true

        eucalyptus {
            S:leafConfigKeys=18
            S:logConfigKeys=<block:eucalyptus>
        }

    }

    extrabiomesxl {
        S:blockConfigKeys=block:customlog.id; block:quarterlog0.id; block:quarterlog1.id; block:quarterlog2.id; block:quarterlog3.id; block:autumnleaves.id; block:greenleaves.id
        S:configPath=extrabiomes/extrabiomes.cfg
        S:modID=ExtrabiomesXL
        B:overrideIMC=false

        acacia {
            S:leafConfigKeys=<block:greenleaves.id>,2
            S:logConfigKeys=<block:customlog.id>,1
        }

        fir {
            S:leafConfigKeys=<block:greenleaves.id>,0; <block:greenleaves.id>,8
            S:logConfigKeys=<block:customlog.id>,0; <block:quarterlog0.id>,1; <block:quarterlog1.id>,1; <block:quarterlog2.id>,1; <block:quarterlog3.id>,1
            I:maxHorLeafBreakDist=10
            B:requireLeafDecayCheck=false
        }

        redwood {
            S:leafConfigKeys=<block:greenleaves.id>,1; <block:greenleaves.id>,9
            S:logConfigKeys=<block:quarterlog0.id>,0; <block:quarterlog1.id>,0; <block:quarterlog2.id>,0; <block:quarterlog3.id>,0
            I:maxHorLeafBreakDist=10
            B:requireLeafDecayCheck=false
        }

        vanilla_oak {
            S:leafConfigKeys=<block:autumnleaves.id>
            S:logConfigKeys=<block:quarterlog0.id>,2; <block:quarterlog1.id>,2; <block:quarterlog2.id>,2; <block:quarterlog3.id>,2;
        }

        vanilla_spruce {
            S:leafConfigKeys=<block:autumnleaves.id>
            S:logConfigKeys=
        }

    }

    forestry {
        S:blockConfigKeys=block:log1; block:log2; block:log3; block:log4; block:log5; block:log6; block:log7; block:leaves
        S:configPath=forestry/base.conf
        S:modID=Forestry
        B:overrideIMC=false

        acacia {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log1>,2; <block:log1>,6; <block:log1>,10
            B:requireLeafDecayCheck=false
        }

        balsa {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log3>,3; <block:log3>,7; <block:log3>,11
            B:requireLeafDecayCheck=false
        }

        baobab {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log2>,2; <block:log2>,6; <block:log2>,10
            B:requireLeafDecayCheck=false
        }

        bluemahoe {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log5>,0; <block:log5>,4; <block:log5>,8
            B:requireLeafDecayCheck=false
        }

        boojum {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log4>,2; <block:log4>,6; <block:log4>,10
            B:requireLeafDecayCheck=false
        }

        bullpine {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log6>,0; <block:log6>,4; <block:log6>,8
            B:requireLeafDecayCheck=false
        }

        cherry {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log4>,3; <block:log4>,7; <block:log4>,11
            B:requireLeafDecayCheck=false
        }

        chestnut {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log2>,0; <block:log2>,4; <block:log2>,8
            B:requireLeafDecayCheck=false
        }

        datepalm {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log5>,2; block:log5>,6; block:log5>,10
            B:requireLeafDecayCheck=false
        }

        ebony {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log3>,1; <block:log3>,5; <block:log3>,9
            B:requireLeafDecayCheck=false
        }

        giant_sequoia {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log7>,0; <block:log7>,4; <block:log7>,8
            B:requireLeafDecayCheck=false
        }

        kapok {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log3>,0; <block:log3>,4; <block:log3>,8
            B:requireLeafDecayCheck=false
        }

        larch {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log1>,0; <block:log1>,4; <block:log1>,8
            B:requireLeafDecayCheck=false
        }

        lemon {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log6>,3; <block:log6>,7; <block:log6>,11
            B:requireLeafDecayCheck=false
        }

        lime {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log1>,3; <block:log1>,7; <block:log1>,11
            B:requireLeafDecayCheck=false
        }

        mahogany {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log3>,2; <block:log3>,6; <block:log3>,10
            B:requireLeafDecayCheck=false
        }

        papaya {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log5>,3; <block:log5>,7; <block:log5>,11
            B:requireLeafDecayCheck=false
        }

        plum {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log6>,1; <block:log6>,5; <block:log6>,9
            B:requireLeafDecayCheck=false
        }

        sequoia {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log2>,3; <block:log2>,7; <block:log2>,11
            B:requireLeafDecayCheck=false
        }

        sugar_maple {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log6>,2; <block:log6>,6; <block:log6>,10
            B:requireLeafDecayCheck=false
        }

        teak {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log1>,1; <block:log1>,5; <block:log1>,9
            B:requireLeafDecayCheck=false
        }

        walnut {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log4>,1; <block:log4>,5; <block:log4>,9
            B:requireLeafDecayCheck=false
        }

        wenge {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log2>,1; <block:log2>,5; <block:log2>,9
            B:requireLeafDecayCheck=false
        }

        white_poplar {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log5>,1; <block:log5>,5; <block:log5>,9
            B:requireLeafDecayCheck=false
        }

        willow {
            S:leafConfigKeys=<block:leaves>,0; <block:leaves>,8
            S:logConfigKeys=<block:log4>,0; <block:log4>,4; <block:log4>,8
            B:requireLeafDecayCheck=false
        }

    }

    gems_plus {
        S:axeIDList=<item:AgateAxe>; <item:AmethystAxe>; <item:ChrysocollaAxe>; <item:CitrineAxe>; <item:EmeraldAxe>; <item:GarnetAxe>; <item:JadeAxe>; <item:JasperAxe>; <item:MalachiteAxe>; <item:OnyxAxe>; <item:PhoenixiteAxe>; <item:QuartzAxe>; <item:RubyAxe>; <item:SapphireAxe>; <item:SpinelAxe>; <item:SugiliteAxe>; <item:TopazAxe>; <item:TourmalineAxe>
        S:configPath=GP.cfg
        S:itemConfigKeys=item:AgateAxe; item:AmethystAxe; item:ChrysocollaAxe; item:CitrineAxe; item:EmeraldAxe; item:GarnetAxe; item:JadeAxe; item:JasperAxe; item:MalachiteAxe; item:OnyxAxe; item:PhoenixiteAxe; item:QuartzAxe; item:RubyAxe; item:SapphireAxe; item:SpinelAxe; item:SugiliteAxe; item:TopazAxe; item:TourmalineAxe
        S:modID=GP
        B:overrideIMC=false
        B:useShiftedItemID=true
    }

    gravisuite {
        S:axeIDList=<items:advChainsawID>
        S:configPath=GraviSuite.cfg
        S:itemConfigKeys=items:advChainsawID
        S:modID=GraviSuite
        B:overrideIMC=false
        B:useShiftedItemID=true
    }

    ic2 {
        S:axeIDList=<item:itemToolBronzeAxe>; <item:itemToolChainsaw>
        S:blockConfigKeys=block:blockRubWood; block:blockRubLeaves
        S:configPath=IC2.cfg
        S:itemConfigKeys=item:itemToolBronzeAxe; item:itemToolChainsaw
        S:modID=IC2
        B:overrideIMC=false
        S:shearsIDList=<item:itemToolChainsaw>
        B:useShiftedItemID=true

        rubber {
            S:leafConfigKeys=<block:blockRubLeaves>
            S:logConfigKeys=<block:blockRubWood>
        }

    }

    mekanism {
        S:axeIDList=<item:BronzeAxe>; <item:BronzePaxel>; <item:DiamondPaxel>; <item:GlowstoneAxe>; <item:GlowstonePaxel>; <item:GoldPaxel>; <item:IronPaxel>; <item:LazuliAxe>; <item:LazuliPaxel>; <item:ObsidianAxe>; <item:ObsidianPaxel>; <item:PlatinumAxe>; <item:PlatinumPaxel>; <item:SteelAxe>; <item:SteelPaxel>; <item:StonePaxel>; <item:WoodPaxel>; <item:OsmiumAxe>; <item:OsmiumPaxel>
        S:configPath=Mekanism.cfg
        S:itemConfigKeys=item:BronzeAxe; item:BronzePaxel; item:DiamondPaxel; item:GlowstoneAxe; item:GlowstonePaxel; item:GoldPaxel; item:IronPaxel; item:LazuliAxe; item:LazuliPaxel; item:ObsidianAxe; item:ObsidianPaxel; item:platinumAxe; item:platinumPaxel; item:SteelAxe; item:SteelPaxel; item:StonePaxel; item:WoodPaxel; item:OsmiumAxe; item:OsmiumPaxel
        S:modID=Mekanism
        B:overrideIMC=false
        B:useShiftedItemID=true
    }

    minefactoryreloaded {
        S:blockConfigKeys=block:ID.RubberWood; block:ID.RubberLeaves; block:ID.RubberSapling
        S:configPath=powercrystals/minefactoryreloaded/common.cfg
        S:modID=MineFactoryReloaded
        B:overrideIMC=false

        rubber {
            S:leafConfigKeys=<block:ID.RubberLeaves>
            S:logConfigKeys=<block:ID.RubberWood>
        }

    }

    natura {
        S:blockConfigKeys=block:Bloodwood Block; block:Flora Leaves; block:Redwood Block; block:Sakura Leaves; block:Wood Block; block:Rare Log; block:Rare Leaves; block:Willow Log
        S:configPath=Natura.txt
        S:modID=Natura
        B:overrideIMC=false

        amaranth {
            S:leafConfigKeys=<block:Rare Leaves>,2; <block:Rare Leaves>,10
            S:logConfigKeys=<block:Rare Log>,2; <block:Rare Log>,6; <block:Rare Log>,10
        }

        bloodwood {
            S:leafConfigKeys=<block:Sakura Leaves>,2
            S:logConfigKeys=<block:Bloodwood Block>
        }

        eucalyptus {
            S:leafConfigKeys=<block:Flora Leaves>,1; <block:Flora Leaves>,9
            S:logConfigKeys=<block:Wood Block>,0; <block:Wood Block>,4; <block:Wood Block>,8
        }

        ghostwood {
            S:leafConfigKeys=<block:Sakura Leaves>,1
            S:logConfigKeys=<block:Wood Block>,2; <block:Wood Block>, 6; <block:Wood Block>, 10
        }

        hopseed {
            S:leafConfigKeys=<block:Flora Leaves>,2
            S:logConfigKeys=<block:Wood Block>,3; <block:Wood Block>, 7; <block:Wood Block>, 11
        }

        maple {
            S:leafConfigKeys=<block:Rare Leaves>,0; <block:Rare Leaves>,8
            S:logConfigKeys=<block:Rare Log>,0; <block:Rare Log>,4; <block:Rare Log>,8
        }

        redwood {
            S:leafConfigKeys=<block:Flora Leaves>,0
            S:logConfigKeys=<block:Redwood Block>
        }

        sakura {
            S:leafConfigKeys=<block:Sakura Leaves>,0; <block:Sakura Leaves>,8
            S:logConfigKeys=<block:Wood Block>, 1; <block:Wood Block>, 5; <block:Wood Block>, 9
        }

        siverbell {
            S:leafConfigKeys=<block:Rare Leaves>,1; <block:Rare Leaves>,9
            S:logConfigKeys=<block:Rare Log>,1; <block:Rare Log>,5; <block:Rare Log>,9
        }

        tigerwood {
            S:leafConfigKeys=<block:Rare Leaves>,3; <block:Rare Leaves>,11
            S:logConfigKeys=<block:Rare Log>,3; <block:Rare Log>,7; <block:Rare Log>,11
        }

        willow {
            S:leafConfigKeys=<block:Sakura Leaves>,3; <block:Sakura Leaves>,11; <block:Sakura Leaves>,15
            S:logConfigKeys=<block:Willow Log>
            I:maxHorLeafBreakDist=5
        }

    }

    railcraft {
        S:axeIDList=<item:tool.steel.axe>
        S:configPath=railcraft/railcraft.cfg
        S:itemConfigKeys=item:tool.steel.axe
        S:modID=Railcraft
        B:overrideIMC=false
        B:useShiftedItemID=true
    }

    redpowerworld {
        S:axeIDList=<items.world:axeRuby.id>; <items.world:axeGreenSapphire.id>; <items.world:axeSapphire.id>
        S:blockConfigKeys=blocks.world:log.id; blocks.world:leaves.id
        S:configPath=redpower/redpower.cfg
        S:itemConfigKeys=items.world:axeRuby.id; items.world:axeGreenSapphire.id; items.world:axeSapphire.id
        S:modID=RedPowerWorld
        B:overrideIMC=false
        B:useShiftedItemID=true

        rubber {
            S:leafConfigKeys=<blocks.world:leaves.id>
            S:logConfigKeys=<blocks.world:log.id>
        }

    }

    tconstruct {
        S:axeIDList=<tools:Axe>; <tools:Lumber Axe>; <tools:Mattock>
        S:configPath=TinkersWorkshop.txt
        S:itemConfigKeys=tools:Axe; tools:Lumber Axe; tools:Mattock
        S:modID=TConstruct
        B:overrideIMC=false
        B:useShiftedItemID=true
    }

    thaumcraft {
        S:axeIDList=<item:Thaumaxe>
        S:blockConfigKeys=block:BlockMagicalLog; block:BlockMagicalLeaves
        S:configPath=Thaumcraft.cfg
        S:itemConfigKeys=item:Thaumaxe
        S:modID=Thaumcraft
        B:overrideIMC=false
        B:useShiftedItemID=true

        greatwood {
            S:leafConfigKeys=<block:BlockMagicalLeaves>,0; <block:BlockMagicalLeaves>,8
            S:logConfigKeys=<block:BlockMagicalLog>,0; <block:BlockMagicalLog>,4; <block:BlockMagicalLog>,8
        }

        silverwood {
            S:leafConfigKeys=<block:BlockMagicalLeaves>,1; <block:BlockMagicalLeaves>,9
            S:logConfigKeys=<block:BlockMagicalLog>,1; <block:BlockMagicalLog>,5; <block:BlockMagicalLog>,9
        }

    }

    twilightforest {
        S:axeIDList=<item:IronwoodAxe>; <item:SteeleafAxe>; <item:MinotaurAxe>
        S:blockConfigKeys=block:Log; block:MagicLog; block:Leaves; block:MagicLeaves; block:MagicLogSpecial; block:Hedge
        S:configPath=TwilightForest.cfg
        S:itemConfigKeys=item:IronwoodAxe; item:SteeleafAxe; item:MinotaurAxe
        S:modID=TwilightForest
        B:overrideIMC=false
        B:useShiftedItemID=true

        canopy {
            S:leafConfigKeys=<block:Leaves>, 1; <block:Leaves>,9
            S:logConfigKeys=<block:Log>,1; <block:Log>,5; <block:Log>,9; <block:Log>,13
        }

        darkwood {
            S:leafConfigKeys=<block:Hedge>,1
            S:logConfigKeys=<block:Log>,3; <block:Log>,7; <block:Log>,11;  <block:Log>,15
            I:maxHorLeafBreakDist=5
            I:maxLeafIDDist=2
            B:requireLeafDecayCheck=false
        }

        mangrove {
            S:leafConfigKeys=<block:Leaves>, 2; <block:Leaves>,10
            S:logConfigKeys=<block:Log>,2; <block:Log>,6; <block:Log>,10; <block:Log>,14
        }

        miner {
            S:leafConfigKeys=<block:MagicLeaves>,2; <block:MagicLeaves>,10
            S:logConfigKeys=<block:MagicLog>,2; <block:MagicLog>,6; <block:MagicLog>,10; <block:MagicLog>,14; <block:MagicLogSpecial>,2
            B:onlyDestroyUpwards=false
        }

        oak {
            S:leafConfigKeys=<block:Leaves>,0; <block:Leaves>,3; <block:Leaves>,8; <block:Leaves>,11
            S:logConfigKeys=<block:Log>,0; <block:Log>,4; <block:Log>,8; <block:Log>,12
        }

        sorting {
            S:leafConfigKeys=<block:MagicLeaves>,3; <block:MagicLeaves>,11
            S:logConfigKeys=<block:MagicLog>,3; <block:MagicLog>,7; <block:MagicLog>,11; <block:MagicLog>,15; <block:MagicLogSpecial>,3
        }

        time {
            S:leafConfigKeys=<block:MagicLeaves>,0; <block:MagicLeaves>,8
            S:logConfigKeys=<block:MagicLog>,0; <block:MagicLog>,4; <block:MagicLog>,8; <block:MagicLog>,12; <block:MagicLogSpecial>,0
        }

        transformation {
            S:leafConfigKeys=<block:MagicLeaves>,1; <block:MagicLeaves>,9
            S:logConfigKeys=<block:MagicLog>,1; <block:MagicLog>,5; <block:MagicLog>,9; <block:MagicLog>,13; <block:MagicLogSpecial>,1
        }

    }

    meteors {
        S:axeIDList=<item:Frezarite Axe ID>; <item:Meteor Axe ID>
        S:configPath=meteors.cfg
        S:itemConfigKeys=item:Frezarite Axe ID; item:Meteor Axe ID
        S:modID=meteors
        B:overrideIMC=false
        B:useShiftedItemID=true
    }

}


